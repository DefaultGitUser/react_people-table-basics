{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/Table.Row/TableRow.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","slug","sex","TableRow","born","died","motherName","fatherName","mother","father","useParams","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","people","setPeople","useEffect","peopleFromServer","map","find","mom","dad","getPreparedPeople","catch","finally","length","NotFoundPage","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qQAGaA,EAAS,WACpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,kBAUA,cAAC,IAAD,CACED,GAAG,UACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,0BAaT,EChCYE,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAML,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECJNM,EAAqB,WAChC,OACE,oBAAIN,UAAU,QAAd,sBAEH,E,sBCFYO,G,MAAS,kBACpB,qBAAKP,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASQ,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCLM,IAAMQ,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAEpB,OACE,cAAC,IAAD,CACEnB,GAAE,aAAQkB,GACVpB,UAAWI,IACT,CAAE,kBAA2B,MAARiB,IAHzB,SAMGF,GAGN,ECZYG,EAA4B,SAAC,GAAgB,IAAdJ,EAAa,EAAbA,OAExCG,EAOEH,EAPFG,IACAE,EAMEL,EANFK,KACAC,EAKEN,EALFM,KACAC,EAIEP,EAJFO,WACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,OACAC,EACEV,EADFU,OAGMR,EAASS,cAATT,KAER,OACE,qBACE,UAAQ,SACRpB,UAAWI,IACT,CAAE,yBAA0BgB,IAASF,EAAOE,OAHhD,UAME,6BACE,cAAC,EAAD,CAAYF,OAAQA,MAGtB,6BAAKG,IACL,6BAAKE,IACL,6BAAKC,IACL,6BACIG,EACG,cAAC,EAAD,CAAYT,OAAQS,IACpBF,GAAc,MAErB,6BACIG,EACG,cAAC,EAAD,CAAYV,OAAQU,IACpBF,GAAc,QAI1B,EC7BYI,EAAa,WACxB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAmB,IAA/C,mBAAOK,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,WACR9B,IACGK,MAAK,SAAC0B,GACLF,EArBkB,SAACD,GACzB,OAAOA,EAAOI,KAAI,SAAAtB,GAChB,IAAMS,EAASS,EAAOK,MAAK,SAAAC,GAAG,OAAIA,EAAIvB,OAASD,EAAOO,UAAxB,IACxBG,EAASQ,EAAOK,MAAK,SAAAE,GAAG,OAAIA,EAAIxB,OAASD,EAAOQ,UAAxB,IAE9B,OAAO,2BACFR,GADL,IAEES,SACAC,UAEH,GACF,CAUiBgB,CAAkBL,GAC7B,IACAM,OAAM,WACLV,GAAW,EACZ,IACAW,SAAQ,kBAAMb,GAAa,EAAnB,GACZ,GAAE,IAGD,qCACE,oBAAIjC,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGgC,GACC,cAAC,EAAD,IAGDE,GACC,mBAAG,UAAQ,qBAAqBlC,UAAU,kBAA1C,mCAKCgC,IAAcI,EAAOW,QACtB,mBAAG,UAAQ,kBAAX,+CAKDX,EAAOW,OAAS,GACf,wBACE,UAAQ,cACR/C,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGoC,EAAOI,KAAI,SAAAtB,GAAM,OAChB,cAAC,EAAD,CAAUA,OAAQA,GAAaA,EAAOE,KADtB,gBAkHjC,EC5LY4B,EAAe,kBAC1B,oBAAIhD,UAAU,QAAd,2BAD0B,ECWfiD,EAAO,WAClB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUjD,GAAG,IAAIkD,SAAO,MACrD,eAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOE,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,SAASC,QAAS,cAAC,EAAD,QAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aAKlC,ECnBDG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,EAAD,I","file":"static/js/main.47a6f40f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const TableRow: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {(mother)\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n      </td>\n      <td>\n        {(father)\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { TableRow } from '../components/Table.Row';\n\nconst getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(mom => mom.name === person.motherName);\n    const father = people.find(dad => dad.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !people.length) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <TableRow person={person} key={person.slug} />\n                ))}\n                {/* <tr data-cy=\"person\">\n                  <td>\n                    <a href=\"#/people/jan-van-brussel-1714\">\n                      Jan van Brussel\n                    </a>\n                  </td>\n\n                  <td>m</td>\n                  <td>1714</td>\n                  <td>1748</td>\n                  <td>Joanna van Rooten</td>\n                  <td>Jacobus van Brussel</td>\n                </tr>\n\n                <tr data-cy=\"person\">\n                  <td>\n                    <a href=\"#/people/philibert-haverbeke-1907\">\n                      Philibert Haverbeke\n                    </a>\n                  </td>\n\n                  <td>m</td>\n                  <td>1907</td>\n                  <td>1997</td>\n\n                  <td>\n                    <a\n                      className=\"has-text-danger\"\n                      href=\"#/people/emma-de-milliano-1876\"\n                    >\n                      Emma de Milliano\n                    </a>\n                  </td>\n\n                  <td>\n                    <a href=\"#/people/emile-haverbeke-1877\">\n                      Emile Haverbeke\n                    </a>\n                  </td>\n                </tr>\n\n                <tr data-cy=\"person\" className=\"has-background-warning\">\n                  <td>\n                    <a href=\"#/people/jan-frans-van-brussel-1761\">\n                      Jan Frans van Brussel\n                    </a>\n                  </td>\n\n                  <td>m</td>\n                  <td>1761</td>\n                  <td>1833</td>\n                  <td>-</td>\n\n                  <td>\n                    <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n                      Jacobus Bernardus van Brussel\n                    </a>\n                  </td>\n                </tr>\n\n                <tr data-cy=\"person\">\n                  <td>\n                    <a\n                      className=\"has-text-danger\"\n                      href=\"#/people/lievijne-jans-1542\"\n                    >\n                      Lievijne Jans\n                    </a>\n                  </td>\n\n                  <td>f</td>\n                  <td>1542</td>\n                  <td>1582</td>\n                  <td>-</td>\n                  <td>-</td>\n                </tr>\n\n                <tr data-cy=\"person\">\n                  <td>\n                    <a href=\"#/people/bernardus-de-causmaecker-1721\">\n                      Bernardus de Causmaecker\n                    </a>\n                  </td>\n\n                  <td>m</td>\n                  <td>1721</td>\n                  <td>1789</td>\n\n                  <td>\n                    <a\n                      className=\"has-text-danger\"\n                      href=\"#/people/livina-haverbeke-1692\"\n                    >\n                      Livina Haverbeke\n                    </a>\n                  </td>\n\n                  <td>\n                    <a href=\"#/people/lieven-de-causmaecker-1696\">\n                      Lieven de Causmaecker\n                    </a>\n                  </td>\n                </tr> */}\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}